---
import Section from "../SectionMinimalist.astro"
import { getLangFromUrl } from "@/i18n/utils.ts";

const lang = getLangFromUrl(Astro.url);
const work = lang === "en"
? (await import("@/CV/cv_english.json")).work
: (await import("@/CV/cv.json")).work;

const translations = await import('@/i18n/traducciones.json');
const t = translations[lang];
---

<Section title={t.work_experience}>
  <ul>
    {
      work.map(
        ({ name, startDate, endDate, position, summary, highlights, url }) => {
          const formatDate = (dateString:any) => {
            if (!dateString) return '';
            const date = new Date(dateString);
            return date.toLocaleDateString('es-ES', {
              day: '2-digit',
              month: '2-digit',
              year: 'numeric'
            });
          };

          const startDateFormatted = formatDate(startDate);
          const endDateFormatted = endDate 
            ? formatDate(endDate)
            : startDate ? 'Actual' : '';

          return (
            <li>
              <article>
                <header>
                  <div>
                    <h3>
                      <a href={url} title={`Ver ${name}`} target="_blank">
                        {name}
                      </a>
                    </h3>
                    <h4>{position}</h4>
                  </div>

                  {(startDateFormatted || endDateFormatted) && (
                    <div>
                      {startDateFormatted && (
                        <time 
                          datetime={startDate}
                          data-title={startDate}>
                            {startDateFormatted}
                        </time>
                      )}
                      {startDateFormatted && endDateFormatted && " - "}
                      {endDateFormatted && (
                        endDate ? (
                          <time 
                            datetime={endDate}
                            data-title={endDate}>
                              {endDateFormatted}
                          </time>
                        ) : (
                          <span>{endDateFormatted}</span>
                        )
                      )}
                    </div>
                  )}
                </header>

                <footer>
                  <p>{summary}</p>
                </footer>
              </article>
            </li>
          )
        }
      )
    }
  </ul>
</Section>

<style>
  ul {
    display: flex;
    flex-direction: column;
    gap: 32px;
  }

  article h3 {
    font-weight: 500;
    color: #111;
  }

  article a {
    color: #111;
  }

  article a:hover {
    text-decoration: underline;
  }

  article h4 {
    color: #222;
    font-weight: 400;
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 4px;
  }

  time {
    color: #555;
    font-size: 0.85rem;
    min-width: 102px;
    cursor: default;
  }

  [data-title]:hover:after {
    opacity: 1;
    transition: all 0.1s ease-in-out 0.5s;
    visibility: visible;
  }

  [data-title]:after {
    content: attr(data-title);
    background-color: #333;
    color: #fff;
    font-size: .75rem;
    font-family: Menlo, Monaco, Lucida Console, "Courier New", monospace;;
    position: absolute;
    padding: .2rem .5rem;
    bottom: -1.4rem;
    left: 50%;
    white-space: nowrap;
    box-shadow: 1px 1px 1px #222222;
    opacity: 0;
    border: 1px solid #111111;
    z-index: 99999;
    visibility: hidden;
    border-radius: 6px;
  }

  [data-title] {
    position: relative;
  }

  @media (width <= 700px) {
    time {
      text-align: right;
    }
  }
</style>